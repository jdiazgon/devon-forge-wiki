:toc: macro
toc::[]

:doctype: book
:reproducible:
:source-highlighter: rouge
:listing-caption: Listing

== OASP4Fn Installation

=== Requirements

In order to develop, build, test and deploy the Serverless applications with OASP4Fn, it is necessary to install the following packages globally:

* link:https://www.typescriptlang.org/[**typescript**] as it is the programming language supported.
* link:https://github.com/TypeStrong/ts-node[**ts-node**] is a TypeScript execution environment to run TypeScript applications locally. 
* link:https://mochajs.org/[**mocha**] is the testing framework.
* link:https://github.com/remy/nodemon[**nodemon**] to run, monitor changes and restart automatically the node server in the development environment.
* link:https://serverless.com/[**serverless**] to use the Serverless framework. 
* link:https://github.com/oasp/oasp4fn[**@oasp/oasp4fn**] to make the commands **oasp4fn** and its shortcut **fun** globally available. 

To install them, run the following command in a terminal: 

[source, bash]
----
$ npm install -g typescript ts-node mocha nodemon serverless @oasp/oasp4fn
----

==== Database Dependencies

First of all, download DynamoDB in order to work with it locally using this link  http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.html[here].

===== Running DynamoDB Local

Go to the folder where you unzip the DynamoDB, and run the command:

    $ java -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar
    
===== Create tables

Go back to the project folder and run the command:

    $ npm run database

or

    $ yarn database

=== Import and Use the Library in Source Code

After installing OASP4Fn, you can import the package in your source code using the _import_ line. It must be added in the **imports section**:

[source, typescript]
----
import oasp4fn from '@oasp/oasp4fn';
import s3 from '@oasp/oasp4fn/dist/adapters/fn-s3';
import dynamo from '@oasp/oasp4fn/dist/adapters/fn-dynamo';

// Then, oasp4fn will be already available in the code

oasp4fn.setDB(dynamo, {endpoint: 'https://...'});
oasp4fn.setStorage(s3);

oasp4fn.config({path: 'getItem/{id}'});

//...
----