:toc: macro
toc::[]

:doctype: book
:reproducible:
:source-highlighter: rouge
:listing-caption: Listing

== Migrating from DevonFW 2.0.1 to DevonFW 2.1.0

== Devon4Sencha

In the Devonfw 2.1.0 release, the Sencha _extJS_ has been updated from release 6.0.0 to release 6.2.0 and the _Sencha Cmd_ has been updated from version 6.1.2.15 to version 6.2.1.29. 

If you want to migrate a Sencha app created with Devonfw 2.0.1 to the new Devonfw 2.1.0 release, following two options are available:

=== Option 1 - *Keeping your previous extJS*

if you want to keep your old _extJS_, copy your existing app to the _devon4sencha_ workspace, in the new Devonfw 2.1.0 release, and replace the existing _ext_ folder with the _ext_ folder of the previous Devonfw release (2.0.1).

=== Option 2 - *Upgrade*

Copy your app into the _devon4sencha_ workspace, in the new Devonfw 2.1.0 release, and go inside its directory. 

[source,bash]
----
D:\Devon-dist_2.1.0\workspaces\examples>cd {your-app-name}
----

Now, execute the _upgrade_ command:

[source,bash]
----
D:\Devon-dist_2.1.0\workspaces\examples\your-app-name> sencha app upgrade 
----

Hereafter, you should be able to run your existing Sencha app into the _devon4sencha_ workspace of the 2.1.0 release of Devonfw.

== OASP4J

To migrate to OASP4J 2.2.0, one doesn't need to update anything. Major features added as part of OASP4J 2.2.0 release are 

. Upgrade to Spring Boot 1.3.8.RELEASE
. Upgrade to Apache CXF 3.1.8
. Database Integration with Oracle 11g
. Added Servlet for HTTP-Debugging
. Refactored code and improved JavaDoc
. Bugfix: mvn spring-boot:run executes successfully for oasp4j application created using oasp4j template 
. Added subsystem tests of SalesmanagementRestService and several other tests
. Added Tests to test java packages conformance to OASP conventions

== CobiGen

Regarding CobiGen, there is no need to update anything. The 2.1.0 release adds only new functionalities to the CobiGen plugin as:

. Sencha Client Generation
. Sencha Architect project generation
. SpringData at server side instead of JPA, if required
. Some fixes regarding the inner code of the plugin itself, already included in the distribution

CobiGen cannot be used for existent projects of Sencha because it uses a particular nomenclature, that all the projects generated by it must follow. In order to create/generate a new Sencha client, https://github.com/devonfw/tools-cobigen/wiki/sencha-gen#sencha-work-space-and-app[these steps] must be followed.
