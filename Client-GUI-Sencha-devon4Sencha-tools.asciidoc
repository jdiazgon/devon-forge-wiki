:toc: macro
toc::[]

:doctype: book
:reproducible:
:source-highlighter: rouge
:listing-caption: Listing

== Devon4Sencha Tools

=== Code Analysis Tools

- *There are a couple of tools you can
use to analyse
your code. Popular tools for JavaScript development are:*


1. JSLint – http://www.jslint.com/[http://www.jslint.com/]

* A JavaScript syntax checker and validator on coding rules.

2. JSHint – http://jshint.com/[http://jshint.com/]

* A community driven fork of JSLint, which is not as
strict as JSLint.



- *There are many plugins available for IDE’s and editors to check the JavaScript code while writing using the above tools.*

=== Analysing code with Sencha Cmd

- Every time when you run a sencha app build or sencha
app build testing on the command-line, it will validate your JavaScript code.Lint errors will show up as parse warnings in your console.

.*Using devcon*
[NOTE]
You can also use the build option using devcon with the `devon sencha build` command <<sencha build,learn more here>>

- Not only it checks your JavaScript errors, it will also check your Sass stylesheet for errors, before compiling it to production ready CSS.

image::images/devon4sencha-badPractices/tools/analyzing-code-with-sencha-cmd.png[Sencha Cmd,width="450",link="images/devon4sencha-badPractices/tools/analyzing-code-with-sencha-cmd.png"]

=== Sonar for JavaScript
- The JavaScript plugin enables analysis and reporting on JavaScript projects.

- More information: 
* https://docs.sonarqube.org/display/PLUG/SonarJS[https://docs.sonarqube.org/display/PLUG/SonarJS]

image::images/devon4sencha-badPractices/tools/sonar-qube.png[Sonar Qube,align="center",width="250",link="images/devon4sencha-badPractices/tools/sonar-qube.png"]

image::images/devon4sencha-badPractices/tools/sonar-for-javascript.png[Sonar for javascript,width="450",link="images/devon4sencha-badPractices/tools/sonar-for-javascript.png"]

