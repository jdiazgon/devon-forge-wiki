:toc: macro
toc::[]

:doctype: book
:reproducible:
:source-highlighter: rouge
:listing-caption: Listing

== Running OASP4JS Application

=== Run the Server

*Make sure that the SERVER (OASP4J) is Up and Running! Otherwise, you wont be able to access any back-end functionalities.*

You can setup the server part using steps mentioned <<Configuring and Running OASP4J Application,here>>.

=== Run the MyThaiStar

==== Step 1: Install Dependencies

To run MyThaiStar front-end, you need to globally install the following dependencies:

1. https://nodejs.org/en/[Node]
1. https://github.com/angular/angular-cli[Angular CLI]
1. https://yarnpkg.com/lang/en/docs/install/[Yarn]

===== Install or update the project

If older versions already exist on your machine, then in order to update Angular CLI globally run following commands sequentially:

[source,bash]
----
$ npm uninstall -g angular-cli @angular/cli 
$ npm cache clean
$ npm install -g @angular/cli 
----

If you have a previous version of this project, you must update the node modules as per your operating system. There are two different ways to do it, using npm or yarn.

*1. Using NPM*

Go to the project folder 

_"workspaces\examples\my-thai-star\angular"_ and run the following commands:

For Windows:
[source,bash]
----
$ rmdir /s node_modules
$ rmdir /s dist
$ npm install
----

For Linux or macOS:
[source,bash]
----
$ rm -rf node_modules dist
$ npm install
----

To test the application as a **PWA**, you will need a small http server:

[source,bash]
----
$ npm i -g http-server
----

Or run yarn using below steps.

*2. Using Yarn*

The project is also tested with the latest https://yarnpkg.com/lang/en/[Yarn] version. After installing the above dependencies, you can go to the project folder 

_"workspaces\examples\my-thai-star\angular"_

and execute the following command for yarn installation:

[source,bash]
----
yarn install 
----

After finishing, you will see something like:

image::images/running-sample-application/yarn_install.png[, link="images/running-sample-application/yarn_install.png"]

Otherwise, if you have a previous version of yarn, then run the following commands:
[source,bash]
----
$ rm -rf node_modules dist
$ yarn
----

If you face any problem with installing dependencies, kindly refer following links:

1. <<OASP4JS NPM-Yarn Workflow,NPM and Yarn Workflow>>
1. link:https://github.com/oasp/my-thai-star/tree/develop/angular[My Thai Start - Angular]

==== Step 2: Run the application

The simple way to run the My Thai Star Angular client is using npm or yarn commands:

===== 1. Using NPM

There are the following alternatives in order to run My Thai Star Angular client with the different server technologies and environments:

[source,bash]
----
$ npm run start                     # Local OASP4J server
$ npm run serve:pwa                 # Build and run the app as PWA
$ npm run serve:prod                # Production server
$ npm run serve:prodcompose         # Production server with Docker compose
$ npm run serve:node                # Node.js or local Serverless server
----

If everything goes well, the console output will be something like this:

image::images/running-sample-application/webpack.JPG[, link="images/running-sample-application/webpack.JPG"]

===== 2. Using Yarn

Alternatively, you can also run using yarn. Make use of one of the following commands:

[source,bash]
----
$ yarn start                     # Local OASP4J server
$ yarn serve:pwa                 # Build and run the app as PWA
$ yarn serve:prod                # Production server
$ yarn serve:prodcompose         # Production server with Docker compose
$ yarn serve:node                # Node.js or local Serverless server
----

===== Step 3: Test the application

Now, go to the browser and open 

[source,bash]
----
localhost:4200
----

and you can see MyThaiStar client running! You can login to the application using:

*username*: waiter

*password*: waiter

as shown below:

image::images/running-sample-application/my-thai-start-longin.png[, link="images/running-sample-application/my-thai-start-longin.png"]