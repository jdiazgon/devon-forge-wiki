:toc: macro
toc::[]

:doctype: book
:reproducible:
:source-highlighter: rouge
:listing-caption: Listing

== Running Sample Application

Devonfw showcases "My Thai Start" as a sample application, which has the most common features of a Devonfw application and its proposed best practices. The sample application also serves as a final test to make sure that your environment is setup correctly. Devonfw distribution comes with a latest Master version of My Thai Star application. 

=== Basics of My Thai Star

The _My Thai Star_ application is a solution for managing the online booking and orders of a restaurant, it is addressed as a showcase app but designed with real requirements although trying to serve as example of common use cases in web apps (master-detail model, login, authorization based on roles, pagination, search with filters, etc.).

image::images/running-sample-application/mts.png[,width="650", link="images/running-sample-application/mts.png"]

Setup Devonfw environment and follow the below steps:

=== Running My Thai Star

==== Server

All Spring boot application have their own embedded Tomcat server. This feature help us to deploy the application in the develop time without the need to create an server. To run the application with this mode, you need to open Eclipse of your Devonfw distribution and perform the following steps:

===== Step 1: Import the project

First of all, import above Sample Application into Eclipse using the following steps:

1. Open Eclipse by executing "eclipse-main.bat" from "_Devon-dist_" folder.

1. Select "File -> Import".

1. Select "Maven -> Existing Maven Projects" as shown below:
+
image::images/running-sample-application/running_sample_application_1_import_maven_prject.png[, width="450", link="images/running-sample-application/running_sample_application_1_import_maven_prject.png",]

1. Select the directory "workspaces/examples/my-thai-star" as shown below and later press "OK":

+
image::images/running-sample-application/select_maven_project_1.png[, width="450 ink="images/running-sample-application/select_maven_project_1.png",]

1. Then press "Finish".
+
image::images/running-sample-application/select_maven_project_2.png[, width="450", link="images/running-sample-application/select_maven_project_2.png",]

1. Wait for Eclipse to finish importing the sample projects. This process might take several minutes, depending on the speed of your internet connection.

===== Step 2: Run the application

Using _Spring Boot_ features,  run your _Java_ back-end applications using the _Run as -> Java application_ over the _SpringBootApp.java_ main class as shown below:

image::images/running-sample-application/run.png[,width="450", link="images/running-sample-application/run.png"]

Once, you see the console messages like : 

----
Tomcat started on port(s): 8081 (http)
Started SpringBootApp in 15.985 seconds (JVM running for 16.833)
----

you can start consuming the _Java_ back-end.

===== Step 3: Test the application

To see the back-end services results, you can use https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop[Postman] plugin for _Chrome_, although you can use any other similar application.

Now, with _Postman_, you can do a simple _GET_ request to obtain the information of a _dish_ with _id=1_ (`http://localhost:8081/mythaistar/services/rest/dishmanagement/v1/dish/1`). And you will get a result like this:

image::images/running-sample-application/get_request.png[,width="450", link="images/running-sample-application/get_request.png"]

Now, Server is running successfully!!!

==== Client

*Make sure that the SERVER is Up and Running!*

===== Step 1: Install Dependencies

To run MyThaiStar front-end, you need to globally install the following dependencies:

1. https://nodejs.org/en/[Node]
1. https://github.com/angular/angular-cli[Angular CLI]
1. https://yarnpkg.com/lang/en/docs/install/[Yarn]

====== Install or update the project

If older versions already exist on your machine, then in order to update Angular CLI globally run following commands sequentially:

[source,bash]
----
$ npm uninstall -g angular-cli @angular/cli 
$ npm cache clean
$ npm install -g @angular/cli 
----

If you have a previous version of this project, you must update the node modules as per your operating system. There are two different ways to do it, using npm or yarn.

====== 1. Using NPM

Go to the project folder 

_"workspaces\examples\my-thai-star\angular"_ and run the following commands:

For Windows:
[source,bash]
----
$ rmdir /s node_modules
$ rmdir /s dist
$ npm install
----

For Linux or macOS:
[source,bash]
----
$ rm -rf node_modules dist
$ npm install
----

To test the application as a **PWA**, you will need a small http server:

[source,bash]
----
$ npm i -g http-server
----

Or run yarn using below steps.

====== 2. Using Yarn

The project is also tested with the latest https://yarnpkg.com/lang/en/[Yarn] version. After installing the above dependencies, you can go to the project folder 

_"workspaces\examples\my-thai-star\angular"_

and execute the following command for yarn installation:

[source,bash]
----
yarn install 
----

After finishing, you will see something like:

image::images/running-sample-application/yarn_install.png[, link="images/running-sample-application/yarn_install.png"]

Otherwise, if you have a previous version of yarn, then run the following commands:
[source,bash]
----
$ rm -rf node_modules dist
$ yarn
----

If you face any problem with installing dependencies, kindly refer following links:

1. <<OASP4JS NPM-Yarn Workflow,NPM and Yarn Workflow>>
1. link:https://github.com/oasp/my-thai-star/tree/develop/angular[My Thai Start - Angular]

===== Step 2: Run the application

The simple way to run the My Thai Star Angular client is using npm or yarn commands:

[source,bash]
----
$ npm run start                     # OASP4J server
----

If everything goes well, the console output will be something like this:

image::images/running-sample-application/webpack.JPG[, link="images/running-sample-application/webpack.JPG"]

Alternatively, you can also run using yarn.

[source,bash]
----
$ yarn start                        # OASP4J server
----

===== Step 3: Test the application

Now, go to your browser and open 

[source,bash]
----
localhost:4200
----

and you can see MyThaiStar client running! You can login to the application using:

*username*: waiter

*password*: waiter

Also shown below:

image::images/running-sample-application/my-thai-start-longin.png[, link="images/running-sample-application/my-thai-start-longin.png"]