:toc: macro
toc::[]

:doctype: book
:reproducible:
:source-highlighter: rouge
:listing-caption: Listing

== Working with forked repositories

=== Fork a repository

A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project.

Most commonly, forks are used to either propose changes to someone else's project or to use someone else's project as a starting point for your own idea.

==== Propose changes to someone else's project

A great example of using forks to propose changes is for bug fixes. Rather than logging an issue for a bug you've found, you can:

. Fork the repository.
. Make the fix.
. Submit a pull request to the project owner.

If the project owner likes your work, they might pull your fix into the original repository!

==== How to fork a repository

GitHub, GitLab and Bitbucket have a very accesible option to fork any repository you can access to. For example, at GitHub you will only need to do the following:

image::images/contributing/fork-github-1.PNG[Fork a Github repository]

In order to work locally you will need to pull your forked repository. Open the Terminal or Git Bash and run the following command:

[source, bash]
----
$ git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY
----

=== Configuring a remote for a fork

You must configure a remote that points to the upstream repository in Git to sync changes you make in a fork with the original repository. This also allows you to sync changes made in the original repository with the fork.

. Open Terminal or Git Bash.

. List the current configured remote repository for your fork.
+
[source, bash]
----
$ git remote -v
origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)
origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)
----

. Specify a new remote upstream repository that will be synced with the fork.
+
[source, bash]
----
$ git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git
----

. Verify the new upstream repository you've specified for your fork.
+
[source, bash]
----
$ git remote -v
origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)
origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)
upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (fetch)
upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (push)
----

=== Syncing a fork

Sync a fork of a repository to keep it up-to-date with the upstream repository.

Before you can sync your fork with an upstream repository, you must configure a remote that points to the upstream repository in Git.

. Open Terminal or Git Bash.

. Change the current working directory to your local project.

. Fetch the branches and their respective commits from the upstream repository. Commits to `master` will be stored in a local branch, `upstream/master`.
+
[source, bash]
----
$ git fetch upstream
remote: Counting objects: 75, done.
remote: Compressing objects: 100% (53/53), done.
remote: Total 62 (delta 27), reused 44 (delta 9)
Unpacking objects: 100% (62/62), done.
From https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY
 * [new branch]      master     -> upstream/master
----

. Check out your fork's local `master` branch.
+
[source, bash]
----
$ git checkout master
Switched to branch 'master'
----

. Merge the changes from `upstream/master` into your local master branch. This brings your fork's `master` branch into sync with the upstream repository, without losing your local changes.
+
[source, bash]
----
$ git merge upstream/master
Updating a422352..5fdff0f
Fast-forward
 README                    |    9 -------
 README.md                 |    7 ++++++
 2 files changed, 7 insertions(+), 9 deletions(-)
 delete mode 100644 README
 create mode 100644 README.md
----
If your local branch didn't have any unique commits, Git will instead perform a "fast-forward":
+
[source, bash]
----
git merge upstream/master
Updating 34e91da..16c56ad
Fast-forward
 README.md                 |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)
----

. Push the changes to update your fork on GitHub, GitLab, Bitbucket, etc. 