:toc: macro
toc::[]

:doctype: book
:reproducible:
:source-highlighter: rouge
:listing-caption: Listing

== Deployment on Wildfly

Following describes the steps to install and configure Wilfly 10.x

. Download WildFly 10.x from http://wildfly.org/downloads/ 
. Place the extracted folder under {DISTRIBUTION_PATH}/software folder.
. Run console.bat under {DISTRIBUTION_PATH}.
. Navigate to path {DISTRIBUTION_PATH}/software/{extracted wildfly folder}/bin
. Run standalone.bat file.

image::images/devonfw-deployment/wildfly/tutorial_devon_standalone.PNG[,width="450",link="images/devonfw-deployment/wildfly/tutorial_devon_standalone.PNG"]

It will start the administration console at http://localhost:9990/console. If the administration console asks for login credentials, provide "admin" as username and password.

Administration console is up and running at http://localhost:9990/console/App.html#home

image::images/devonfw-deployment/wildfly/tutorial_devon_administration_console.png[,width="450",link="images/devonfw-deployment/wildfly/tutorial_devon_administration_console.png"]


To run .war file on Wildfly administration console, follow below steps:

* Click on start (highlighted in below screenshot)

image::images/devonfw-deployment/wildfly/tutorial_devon_administration_console_start.png[,width="450",link="images/devonfw-deployment/wildfly/tutorial_devon_administration_console_start.png"]

* Click on Add button (highlighted in below screenshot)

image::images/devonfw-deployment/wildfly/tutorial_devon_administration_console_Add.png[,width="450",link="images/devonfw-deployment/wildfly/tutorial_devon_administration_console_Add.png"]

* Upload new deployement.

image::images/devonfw-deployment/wildfly/tutorial_devon_administration_UploadDeployement.png[,width="450",link="images/devonfw-deployment/wildfly/tutorial_devon_administration_UploadDeployement.png"]

* Choose .war file for the deployment.

image::images/devonfw-deployment/wildfly/tutorial_devon_administration_choose_file.png[,width="450",link="images/devonfw-deployment/wildfly/tutorial_devon_administration_choose_file.png"]

* Verify upload and finish

image::images/devonfw-deployment/wildfly/tutorial_devon_administration_verify_upload.png[,width="450",link="images/devonfw-deployment/wildfly/tutorial_devon_administration_verify_upload.png"]

* Successful deployment

image::images/devonfw-deployment/wildfly/tutorial_devon_administration_deployment_success.png[,width="450",link="images/devonfw-deployment/wildfly/tutorial_devon_administration_deployment_success.png"]


*Execute below mentioned steps to create .war file :*

* start a new oasp4j project from the template
mvn -DarchetypeVersion=2.5.0 -DarchetypeGroupId=io.oasp.java.templates -DarchetypeArtifactId=oasp4j-template-server archetype:generate -DgroupId=io.oasp.application -DartifactId=sampleProj -Dversion=0.1-SNAPSHOT -Dpackage=io.oasp.application.sampleProj

* On SpringBootApp.java 
- Remove the exclude=xxxx option on the @SpringBootApplication annotation
- Remove the @EnableGlobalMethodSecurity annotation

* Remove the SpringBootBatchApp file.

* In pom.xml 

Add below dependecies: 
[source,xml]
----


<dependency>
<groupId>org.apache.cxf</groupId>
<artifactId>cxf-spring-boot-starter-jaxrs</artifactId>
<version>3.1.10</version>
</dependency>
<dependency>
<groupId>javax.xml.ws</groupId>
<artifactId>jaxws-api</artifactId>
<version>2.2.11</version>
</dependency>

<dependency>
<groupId>javax.xml.ws</groupId>
<artifactId>jaxws-api</artifactId>
<version>2.2.11</version>
</dependency>

----

Remove below dependency:
[source,xml]
----

<!-- <dependency>
<groupId>org.springframework</groupId>
<artifactId>spring-websocket</artifactId>
</dependency>
-->
<!-- 
<dependency>
<groupId>org.springframework.boot</groupId>
<artifactId>spring-boot-starter-actuator</artifactId>
</dependency>
-->

----


Modify below dependency:

[source,xml]
----

<dependency>
<groupId>org.springframework.boot</groupId>
<artifactId>spring-boot-starter-web</artifactId>
<exclusions>
<exclusion>
<groupId>org.apache.tomcat.embed</groupId>
<artifactId>tomcat-embed-websocket</artifactId>
</exclusion>
</exclusions>
</dependency>

---- 

* create a file for a new rest controller
[source,xml]
----
package io.oasp.application.sampleapp.general.service.impl.rest;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import org.springframework.stereotype.Component;

@Component
@Path("/hello")
public class HelloWorldEndpoint {
@GET
@Path("/world")
@Produces(MediaType.TEXT_PLAIN)
public String test() {

return "Hello world!";
}
}
----

* server logback.xml comment non console loggers:
[source,xml]
----
<!-- <property name="logPath" value="../logs"/> -->
<!-- <include resource="io/oasp/logging/logback/appenders-file-all.xml" /> -->

<!-- <appender-ref ref="ERROR_APPENDER"/>
<appender-ref ref="INFO_APPENDER"/>
<appender-ref ref="DEBUG_APPENDER"/> -->

----

* Build your application with command "mvn clean install" and create the .war file and deploy it to wildfly 10 Administration console and start the application. You can hit the URL based on the context root of your project which is deployed on Wildfly.  


image::images/devonfw-deployment/wildfly/tutorial_devon_administration_LoginPage.png[,width="450",link="images/devonfw-deployment/wildfly/tutorial_devon_administration_LoginPage.png"]

* To test the webservice created on server, hit the URL http://localhost:8080/sampleProj-server-0.0.1-SNAPSHOT/services/rest/hello/world on browser.

image::images/devonfw-deployment/wildfly/tutorial_devon_administration_RestServiceCall.png[,width="450",link="images/devonfw-deployment/wildfly/tutorial_devon_administration_RestServiceCall.png"]


